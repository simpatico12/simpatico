# ================================================================
# 🏆 4대 전설적 퀀트 전략 통합 환경설정 파일
# ================================================================
# 
# 🇺🇸 미국주식 전설적 퀸트 마스터시스템 V6.0
# 🪙 업비트 전설급 5대 시스템 완전체  
# 🇯🇵 일본주식 YEN-HUNTER 전설급 TOPIX+JPX400
# 🇮🇳 인도 전설 투자전략 + 14개 전설급 기술지표
# 
# 작성일: 2024년 12월 
# 버전: LEGENDARY COMPLETE EDITION
# ================================================================

# ================================================================
# 🔧 기본 시스템 설정
# ================================================================

# 환경 및 모드 설정
ENVIRONMENT=production
PROJECT_MODE=live_trading
DEBUG_MODE=false
LOG_LEVEL=INFO

# 보안 키
MASTER_ENCRYPTION_KEY=your_32_character_master_key_here_12345
JWT_SECRET=your_jwt_secret_key_minimum_32_characters_required
SESSION_SECRET=your_session_secret_for_web_interface_security

# 데이터베이스 (포트폴리오 및 거래 이력 저장)
DATABASE_URL=postgresql://username:password@localhost:5432/quant_trading_db
MONGODB_URL=mongodb://localhost:27017/trading_analytics
REDIS_URL=redis://localhost:6379/0

# ================================================================
# 📱 알림 시스템
# ================================================================

# 텔레그램 봇 (거래 신호 및 수익률 알림)
TELEGRAM_BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefg
TELEGRAM_CHAT_ID=-1001234567890
TELEGRAM_ENABLED=true

# 디스코드 웹훅 (포트폴리오 리포트)
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/1234567890/abcdefghijklmnopqrstuvwxyz
DISCORD_ENABLED=false

# 슬랙 알림 (에러 및 시스템 상태)
SLACK_BOT_TOKEN=
SLACK_CHANNEL=#trading-alerts
SLACK_ENABLED=false

# 이메일 알림 (일일 리포트)
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_specific_password
EMAIL_FROM=trading_bot@yourcompany.com
EMAIL_TO=your_alerts@gmail.com
EMAIL_ENABLED=false

# ================================================================
# 🏦 Interactive Brokers (IBKR) - 미국 주식
# ================================================================

# IBKR TWS/Gateway 연결 설정 (API 키 없음 - IP/포트 기반)
IBKR_HOST=127.0.0.1
IBKR_PORT=7497
IBKR_CLIENT_ID=1
IBKR_ACCOUNT_ID=DU123456789
IBKR_PAPER_TRADING=true
IBKR_AUTO_CONNECT=false
IBKR_CONNECTION_TIMEOUT=30

# IBKR TWS 설정 (실제 거래시 7496, 모의거래시 7497)
IBKR_TWS_PORT_LIVE=7496
IBKR_TWS_PORT_PAPER=7497
IBKR_GATEWAY_PORT_LIVE=4001
IBKR_GATEWAY_PORT_PAPER=4002

# IBKR 거래 설정
IBKR_ENABLE_AUTO_TRADING=false
IBKR_MAX_DAILY_TRADES=10
IBKR_POSITION_SIZE_LIMIT=50000
IBKR_CASH_THRESHOLD=10000
IBKR_DEFAULT_ORDER_TYPE=MKT
IBKR_GOOD_TILL_CANCEL=true
IBKR_OUTSIDE_RTH=false
IBKR_TRANSMIT_ORDERS=false
IBKR_MIN_ORDER_VALUE=500

# IBKR 리스크 관리
IBKR_MAX_PORTFOLIO_ALLOCATION=80
IBKR_MAX_SINGLE_POSITION=8
IBKR_MAX_SECTOR_ALLOCATION=25
IBKR_STOP_LOSS_PERCENT=15
IBKR_TAKE_PROFIT_1=20
IBKR_TAKE_PROFIT_2=35
IBKR_MAX_HOLD_DAYS=60

# ================================================================
# 🪙 업비트 (Upbit) - 한국 암호화폐
# ================================================================

# 업비트 API 키
UPBIT_ACCESS_KEY=your_upbit_access_key_here_abcdef1234567890
UPBIT_SECRET_KEY=your_upbit_secret_key_here_abcdef1234567890abcdef1234567890abcdef12
UPBIT_SERVER_URL=https://api.upbit.com

# 업비트 거래 설정
UPBIT_AUTO_TRADING=false
UPBIT_MIN_ORDER_AMOUNT=5000
UPBIT_MAX_ORDER_AMOUNT=10000000
UPBIT_ORDER_TYPE=market
UPBIT_DEMO_MODE=true

# 업비트 포트폴리오 설정
UPBIT_PORTFOLIO_SIZE=100000000
UPBIT_MIN_VOLUME_KRW=10000000000
UPBIT_TARGET_COINS=8
UPBIT_KELLY_MAX_RATIO=0.25
UPBIT_CONFIDENCE_THRESHOLD=0.70

# 업비트 분할매매 설정
UPBIT_STAGE1_RATIO=40
UPBIT_STAGE2_RATIO=35
UPBIT_STAGE3_RATIO=25
UPBIT_STAGE2_DROP_PERCENT=-5
UPBIT_STAGE3_DROP_PERCENT=-10

# 업비트 리스크 관리
UPBIT_STOP_LOSS_PERCENT=15
UPBIT_TAKE_PROFIT_1=20
UPBIT_TAKE_PROFIT_2=35
UPBIT_MAX_HOLD_DAYS=30
UPBIT_TRAILING_STOP_RATIO=10

# ================================================================
# 🇯🇵 일본 주식 API 설정
# ================================================================

# 야후 파이낸스 Japan
YAHOO_FINANCE_TIMEOUT=30
YAHOO_FINANCE_RETRIES=3
YAHOO_FINANCE_DELAY=0.3

# SBI Securities API (일본)
SBI_API_KEY=your_sbi_api_key_here
SBI_SECRET_KEY=your_sbi_secret_key_here
SBI_ACCOUNT_ID=your_sbi_account_number
SBI_DEMO_MODE=true

# 마네ック스 Securities API
MONEX_API_KEY=your_monex_api_key_here
MONEX_SECRET_KEY=your_monex_secret_key_here
MONEX_ACCOUNT_ID=your_monex_account_number

# 일본 주식 설정
JAPAN_PORTFOLIO_VALUE=10000000
JAPAN_YEN_STRONG_THRESHOLD=105.0
JAPAN_YEN_WEAK_THRESHOLD=110.0
JAPAN_MIN_MARKET_CAP=500000000000
JAPAN_TARGET_STOCKS=15
JAPAN_BUY_THRESHOLD=0.7

# ================================================================
# 🇮🇳 인도 주식 API 설정  
# ================================================================

# Zerodha Kite API
ZERODHA_API_KEY=your_zerodha_api_key_here
ZERODHA_SECRET_KEY=your_zerodha_secret_key_here
ZERODHA_ACCESS_TOKEN=your_zerodha_access_token_here
ZERODHA_REQUEST_TOKEN=your_zerodha_request_token_here

# Angel One API
ANGEL_CLIENT_CODE=your_angel_client_code
ANGEL_PASSWORD=your_angel_password
ANGEL_API_KEY=your_angel_api_key
ANGEL_SECRET_KEY=your_angel_secret_key

# 5Paisa API
FIVEPAISA_EMAIL=your_5paisa_email@gmail.com
FIVEPAISA_PASSWORD=your_5paisa_password
FIVEPAISA_CLIENT_CODE=your_5paisa_client_code
FIVEPAISA_APP_KEY=your_5paisa_app_key

# 인도 주식 설정
INDIA_PORTFOLIO_VALUE=10000000
INDIA_TARGET_STOCKS=10
INDIA_MIN_MARKET_CAP=5000000000
INDIA_AUTO_SELECTION=true

# ================================================================
# 📊 데이터 제공업체 API
# ================================================================

# Alpha Vantage (글로벌 주식 데이터)
ALPHA_VANTAGE_API_KEY=your_alpha_vantage_api_key_here
ALPHA_VANTAGE_RATE_LIMIT=5

# Finnhub (실시간 데이터)
FINNHUB_API_KEY=your_finnhub_api_key_here
FINNHUB_SANDBOX_MODE=false

# Quandl (경제 데이터)
QUANDL_API_KEY=your_quandl_api_key_here

# IEX Cloud (미국 주식 데이터)
IEX_CLOUD_TOKEN=pk_test_your_iex_cloud_token_here
IEX_CLOUD_SECRET=sk_test_your_iex_cloud_secret_here
IEX_CLOUD_SANDBOX=true

# Polygon.io (고급 시장 데이터)
POLYGON_API_KEY=your_polygon_api_key_here

# Bloomberg API
BLOOMBERG_API_HOST=localhost
BLOOMBERG_API_PORT=8194
BLOOMBERG_ENABLED=false

# ================================================================
# 🔍 뉴스 및 센티멘트 분석
# ================================================================

# News API
NEWS_API_KEY=your_news_api_key_here
NEWS_SOURCES=reuters,bloomberg,cnbc,financial-times

# Twitter API v2
TWITTER_BEARER_TOKEN=your_twitter_bearer_token_here
TWITTER_API_KEY=your_twitter_api_key_here
TWITTER_API_SECRET=your_twitter_api_secret_here
TWITTER_ACCESS_TOKEN=your_twitter_access_token_here
TWITTER_ACCESS_SECRET=your_twitter_access_secret_here

# Reddit API
REDDIT_CLIENT_ID=your_reddit_client_id_here
REDDIT_CLIENT_SECRET=your_reddit_client_secret_here
REDDIT_USER_AGENT=QuantTradingBot/1.0

# ================================================================
# 🤖 AI 및 머신러닝 서비스
# ================================================================

# OpenAI API (GPT 기반 분석)
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=2000

# Anthropic Claude API
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here

# Google Cloud AI
GOOGLE_CLOUD_PROJECT_ID=your_gcp_project_id
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# AWS Bedrock
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1

# ================================================================
# 📈 백테스팅 및 분석 도구
# ================================================================

# QuantConnect
QUANTCONNECT_USER_ID=your_quantconnect_user_id
QUANTCONNECT_API_TOKEN=your_quantconnect_api_token

# Zipline Bundle
ZIPLINE_ROOT=/home/user/zipline_data
ZIPLINE_BUNDLE=quandl

# 백테스팅 설정
BACKTEST_START_DATE=2020-01-01
BACKTEST_END_DATE=2024-12-31
BACKTEST_INITIAL_CAPITAL=1000000
BACKTEST_BENCHMARK=SPY

# ================================================================
# 🌐 웹 인터페이스 및 대시보드
# ================================================================

# Flask/Django 웹 서버
WEB_HOST=0.0.0.0
WEB_PORT=8080
WEB_DEBUG=false
SECRET_KEY=your_web_secret_key_32_characters_min

# Dash/Streamlit 대시보드
DASHBOARD_HOST=localhost
DASHBOARD_PORT=8501
DASHBOARD_THEME=dark

# 인증 설정
ENABLE_AUTH=true
ADMIN_USERNAME=admin
ADMIN_PASSWORD=your_secure_admin_password
JWT_EXPIRATION_HOURS=24

# ================================================================
# 📊 모니터링 및 로깅
# ================================================================

# 로깅 설정
LOG_FILE_PATH=/var/log/quant_trading/app.log
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# 메트릭 및 모니터링
PROMETHEUS_PORT=9090
GRAFANA_URL=http://localhost:3000
GRAFANA_API_KEY=your_grafana_api_key

# Sentry 에러 추적
SENTRY_DSN=https://your_sentry_dsn_here@sentry.io/project_id
SENTRY_ENVIRONMENT=production

# ================================================================
# 🔄 자동화 및 스케줄링
# ================================================================

# Cron 스케줄 설정
MARKET_SCAN_SCHEDULE=0 9 * * 1-5
PORTFOLIO_REBALANCE_SCHEDULE=0 21 * * 5
RISK_CHECK_SCHEDULE=*/30 * * * *
BACKUP_SCHEDULE=0 2 * * *

# 자동화 플래그
AUTO_MARKET_SCAN=true
AUTO_TRADING=false
AUTO_REBALANCE=false
AUTO_RISK_MANAGEMENT=true

# ================================================================
# 🛡️ 보안 및 위험 관리
# ================================================================

# API 제한 설정
API_RATE_LIMIT_PER_MINUTE=100
MAX_CONCURRENT_REQUESTS=10
REQUEST_TIMEOUT=30
MAX_RETRIES=3

# 거래 제한
MAX_DAILY_LOSS_PERCENT=5
MAX_POSITION_SIZE_PERCENT=10
MAX_LEVERAGE=1.0
ENABLE_CIRCUIT_BREAKER=true

# 백업 설정
BACKUP_ENABLED=true
BACKUP_LOCATION=/backup/quant_trading
S3_BACKUP_BUCKET=your-trading-backup-bucket
S3_ACCESS_KEY=your_s3_access_key
S3_SECRET_KEY=your_s3_secret_key

# ================================================================
# 🌍 지역별 시장 설정
# ================================================================

# 시간대 설정
TIMEZONE_US=America/New_York
TIMEZONE_KR=Asia/Seoul
TIMEZONE_JP=Asia/Tokyo
TIMEZONE_IN=Asia/Kolkata

# 거래 시간 (24시간 형식)
US_MARKET_OPEN=09:30
US_MARKET_CLOSE=16:00
KR_MARKET_OPEN=09:00
KR_MARKET_CLOSE=15:30
JP_MARKET_OPEN=09:00
JP_MARKET_CLOSE=15:00
IN_MARKET_OPEN=09:15
IN_MARKET_CLOSE=15:30

# 공휴일 설정
HOLIDAY_CALENDAR_US=NYSE
HOLIDAY_CALENDAR_KR=KRX
HOLIDAY_CALENDAR_JP=TSE
HOLIDAY_CALENDAR_IN=NSE

# ================================================================
# 💾 캐시 및 성능 최적화
# ================================================================

# Redis 캐시 설정
CACHE_TTL_SECONDS=300
CACHE_MAX_MEMORY=1GB
CACHE_EVICTION_POLICY=allkeys-lru

# 데이터베이스 최적화
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600

# 네트워크 최적화
CONNECTION_POOL_SIZE=100
CONNECTION_TIMEOUT=10
READ_TIMEOUT=30
KEEP_ALIVE=true

# ================================================================
# 🧪 테스트 및 개발 환경
# ================================================================

# 테스트 설정
TEST_DATABASE_URL=sqlite:///test_trading.db
TEST_PORTFOLIO_SIZE=100000
TEST_ENABLED=true

# 개발 도구
ENABLE_PROFILER=false
ENABLE_DEBUGGER=false
VERBOSE_LOGGING=false

# 시뮬레이션 모드
SIMULATION_MODE=true
SIMULATION_SLIPPAGE=0.001
SIMULATION_COMMISSION=0.001

# ================================================================
# 📱 모바일 및 외부 연동
# ================================================================

# 푸시 알림 (Firebase)
FIREBASE_SERVER_KEY=your_firebase_server_key_here
FIREBASE_PROJECT_ID=your_firebase_project_id

# Webhook 설정
WEBHOOK_SECRET=your_webhook_secret_key
WEBHOOK_TIMEOUT=5
WEBHOOK_RETRIES=3

# API 인증
API_KEY=your_external_api_key_here
API_SECRET=your_external_api_secret_here

# ================================================================
# 📊 고급 분석 도구
# ================================================================

# TradingView 연동
TRADINGVIEW_USERNAME=your_tradingview_username
TRADINGVIEW_PASSWORD=your_tradingview_password

# QuantLib 설정
QUANTLIB_DATE_FORMAT=%Y-%m-%d
QUANTLIB_CALENDAR=UnitedStates

# TA-Lib 설정
TALIB_CACHE_SIZE=1000
TALIB_PRECISION=6

# ================================================================
# 🔌 써드파티 연동
# ================================================================

# GitHub (코드 백업)
GITHUB_TOKEN=ghp_your_github_personal_access_token
GITHUB_REPOSITORY=your_username/quant-trading-strategies

# Google Sheets (리포트 저장)
GOOGLE_SHEETS_CREDENTIALS=/path/to/sheets-credentials.json
GOOGLE_SHEETS_SPREADSHEET_ID=your_google_sheets_id

# Notion (문서화)
NOTION_TOKEN=secret_your_notion_integration_token
NOTION_DATABASE_ID=your_notion_database_id

# ================================================================
# 환경변수 로드 검증 (주석 처리된 예시)
# ================================================================

# 필수 환경변수 검증 스크립트 예시:
# required_vars = [
#     "UPBIT_ACCESS_KEY", "UPBIT_SECRET_KEY",
#     "IBKR_ACCOUNT_ID", "TELEGRAM_BOT_TOKEN",
#     "DATABASE_URL", "MASTER_ENCRYPTION_KEY"
# ]
# 
# for var in required_vars:
#     if not os.getenv(var):
#         raise ValueError(f"Required environment variable {var} is not set")

# ================================================================
# 🚀 실행 명령어 가이드
# ================================================================

# 🇺🇸 미국 주식 전략 실행
# python us_legendary_strategy.py
# python -c "import asyncio; from us_strategy import run_legendary_auto_selection; asyncio.run(run_legendary_auto_selection())"

# 🪙 업비트 암호화폐 전략 실행  
# python upbit_legendary_strategy.py
# python -c "import asyncio; from upbit_strategy import main; asyncio.run(main())"

# 🇯🇵 일본 주식 전략 실행
# python japan_yen_hunter.py
# python -c "import asyncio; from japan_strategy import hunt_jp_legends; asyncio.run(hunt_jp_legends())"

# 🇮🇳 인도 주식 전략 실행
# python india_legendary_strategy.py
# python -c "from india_strategy import LegendaryIndiaStrategy; strategy = LegendaryIndiaStrategy(); df = strategy.create_sample_data(); strategy.run_strategy(df)"

# 🎮 통합 실행 (모든 전략)
# python run_all_strategies.py
# python -m quant_trading.main --all-markets

# 🔄 실시간 모니터링 시작
# python monitor.py --live
# python -c "import asyncio; from monitor import start_monitoring; asyncio.run(start_monitoring())"

# 📊 웹 대시보드 시작
# python app.py
# flask run --host=0.0.0.0 --port=8080
# streamlit run dashboard.py --server.port 8501

# 🧪 백테스팅 실행
# python backtest.py --strategy=all --period=1y
# python -m pytest tests/ -v

# ================================================================
# 📋 설치 및 설정 가이드
# ================================================================

# 1. 의존성 패키지 설치
# pip install -r requirements.txt
# pip install yfinance pandas numpy asyncio pyupbit ib_insync python-dotenv

# 2. 환경 파일 설정
# cp .env.example .env
# nano .env  # API 키들 입력

# 3. 데이터베이스 초기화
# python init_db.py
# alembic upgrade head

# 4. IBKR TWS/Gateway 실행 (미국 주식용)
# - TWS 또는 Gateway 프로그램 실행
# - API 설정에서 포트 7497 (모의) 또는 7496 (실거래) 활성화
# - 클라이언트 ID 허용 설정

# 5. 텔레그램 봇 설정 (알림용)
# - @BotFather에서 봇 생성
# - 토큰 받아서 TELEGRAM_BOT_TOKEN에 입력
# - 봇과 대화 시작 후 chat_id 확인

# ================================================================
# 📝 사용법 및 주의사항
# ================================================================

# 1. 이 파일을 .env로 저장하세요
# 2. 모든 API 키를 실제 값으로 교체하세요  
# 3. 민감한 정보는 절대 Git에 커밋하지 마세요
# 4. 주기적으로 API 키를 갱신하세요
# 5. 운영 환경에서는 DEMO_MODE를 false로 설정하세요
# 6. 자동매매 활성화 전에 충분한 테스트를 진행하세요
# 7. 리스크 관리 설정을 반드시 확인하세요
# 8. 정기적으로 백업을 확인하세요

# ================================================================
# ⚡ 빠른 시작 가이드
# ================================================================

# 1단계: 환경 설정
# git clone your_repository
# cd quant_trading_project
# pip install -r requirements.txt
# cp .env.example .env

# 2단계: API 키 설정 (.env 파일 수정)
# nano .env
# # UPBIT_ACCESS_KEY, TELEGRAM_BOT_TOKEN 등 입력

# 3단계: 테스트 실행 (시뮬레이션 모드)
# python upbit_legendary_strategy.py
# python japan_yen_hunter.py  
# python india_legendary_strategy.py

# 4단계: 실거래 활성화 (충분한 테스트 후)
# # .env에서 DEMO_MODE=false, AUTO_TRADING=true 설정
# python monitor.py --live

# 5단계: 웹 대시보드로 모니터링
# streamlit run dashboard.py

# ================================================================
# 🏆 전설적 퀀트 시스템 - 환경설정 완료
# ================================================================
# 
# 이 환경설정으로 다음이 가능합니다:
# ✅ 미국 주식 자동매매 (IBKR)
# ✅ 한국 암호화폐 자동매매 (업비트)  
# ✅ 일본 주식 신호 생성 (야후 파이낸스)
# ✅ 인도 주식 분석 (Zerodha/Angel One)
# ✅ 실시간 알림 (텔레그램/디스코드/슬랙)
# ✅ 포트폴리오 관리 및 리스크 제어
# ✅ 백테스팅 및 성과 분석
# ✅ 웹 대시보드 및 모니터링
# 
# 🚀 이제 진정한 퀀트 트레이더가 되어보세요!
# ================================================================
