# =====================================
# 🏆 최고퀸트프로젝트 - 통합 설정 파일 (Enhanced Edition)
# =====================================
# 
# 파일 위치: settings.yaml
# 연동 파일: .env.example, .gitignore, requirements.txt
# 
# 이 파일은 다음과 완벽하게 연동됩니다:
# - 환경변수 (.env)로부터 민감한 정보 로드
# - requirements.txt의 모든 패키지 활용
# - .gitignore로 보안 파일 보호
#
# Author: 최고퀸트팀
# Version: 3.0.0 (통합 연동 버전)
# Project: 최고퀸트프로젝트
# Last Updated: 2025-07-01
# =====================================

# =====================================
# 🌍 프로젝트 기본 정보
# =====================================
project:
  name: "최고퀸트프로젝트"
  version: "3.0.0"
  environment: ${ENVIRONMENT:-development}  # .env에서 로드
  mode: ${PROJECT_MODE:-safe}               # .env에서 로드
  
  # 시간대 및 지역 설정 (.env 연동)
  timezone: ${TIMEZONE:-Asia/Seoul}
  language: ${LANGUAGE:-ko}
  base_currency: ${BASE_CURRENCY:-KRW}

# =====================================
# 📅 스케줄러 설정 (Enhanced)
# =====================================
schedule:
  # 요일별 스케줄 (동적 조정 가능)
  weekly_schedule:
    monday: 
      strategies: ['COIN']
      priority: 'high'
      max_trades: ${MAX_DAILY_TRADES:-10}
    tuesday: 
      strategies: ['US', 'JP']
      priority: 'medium'
      max_trades: ${MAX_DAILY_TRADES:-10}
    wednesday: 
      strategies: []
      priority: 'low'
      maintenance_mode: true
    thursday: 
      strategies: ['US', 'JP']
      priority: 'high'
      max_trades: ${MAX_DAILY_TRADES:-10}
    friday: 
      strategies: ['COIN']
      priority: 'medium'
      max_trades: ${MAX_DAILY_TRADES:-10}
    saturday: 
      strategies: ['COIN', 'US', 'JP']  # 테스트용
      priority: 'test'
      max_trades: 50
      test_mode: true
    sunday: 
      strategies: []
      priority: 'low'
      backup_mode: true
  
  # 동적 스케줄 조정
  dynamic_adjustment:
    force_enabled_strategies: []    # 강제 활성화
    force_disabled_strategies: []   # 강제 비활성화
    market_condition_override: true # 시장 상황에 따른 조정
  
  # 글로벌 거래 시간 (.env 연동)
  global_trading_hours:
    start_hour: ${TRADING_START_HOUR:-9}
    end_hour: ${TRADING_END_HOUR:-18}
    timezone: ${TIMEZONE:-Asia/Seoul}
    
    # 프리마켓/애프터아워 (.env 연동)
    premarket_enabled: ${PREMARKET_TRADING:-false}
    afterhours_enabled: ${AFTERHOURS_TRADING:-false}
  
  # 전략별 실행 제한
  strategy_restrictions:
    US:
      allowed_hours: [9, 10, 11, 12, 13, 14, 15, 16]
      min_interval_minutes: ${SIGNAL_CHECK_INTERVAL:-300}  # .env에서 초 단위를 분으로 변환
      max_positions: ${MAX_OPEN_POSITIONS:-5}
      confidence_threshold: ${US_CONFIDENCE_THRESHOLD:-0.75}
    JP:
      allowed_hours: [9, 10, 11, 12, 13, 14, 15]
      min_interval_minutes: ${SIGNAL_CHECK_INTERVAL:-300}
      max_positions: ${MAX_OPEN_POSITIONS:-5}
      confidence_threshold: ${JP_CONFIDENCE_THRESHOLD:-0.60}
    COIN:
      allowed_hours: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]
      min_interval_minutes: ${PRICE_UPDATE_INTERVAL:-30}   # 암호화폐는 더 자주
      max_positions: ${MAX_OPEN_POSITIONS:-5}
      confidence_threshold: ${COIN_CONFIDENCE_THRESHOLD:-0.65}
  
  # 실행 시간 스케줄
  execution_schedule:
    market_analysis: ${MARKET_ANALYSIS_TIME:-"08:30"}
    trading_execution: ${TRADING_EXECUTION_TIME:-"09:00"}
    daily_report: ${DAILY_REPORT_TIME:-"18:00"}
    weekly_report: ${WEEKLY_REPORT_DAY:-"sunday"}
    monthly_report: ${MONTHLY_REPORT_DAY:-1}
    system_health_check: "06:00"
    backup_time: "02:00"
  
  # 테스트 모드 설정 (.env 연동)
  test_mode:
    enabled: ${TEST_MODE:-false}
    ignore_market_hours: false
    override_weekday_limits: false
    force_all_strategies: false
    mock_data_enabled: ${TEST_DATA_ENABLED:-false}

# =====================================
# 🇺🇸 미국 주식 전략 (.env 연동)
# =====================================
us_strategy:
  enabled: ${US_STRATEGY_ENABLED:-true}
  confidence_threshold: ${US_CONFIDENCE_THRESHOLD:-0.75}
  allocation: ${US_ALLOCATION:-0.60}  # 포트폴리오 60%
  
  # 워렌 버핏 가치투자 지표
  buffett_strategy:
    enabled: true
    pbr_max: 2.0
    roe_min: ${ROE_MIN:-15.0}
    debt_ratio_max: 0.4
    dividend_yield_min: 2.0
    pe_ratio_max: 20.0
  
  # 피터 린치 성장투자 지표
  lynch_strategy:
    enabled: true
    peg_ratio_max: 1.0
    growth_rate_min: 10.0
    earnings_consistency: true
    sector_diversification: true
  
  # 기술적 분석 (.env 연동)
  technical_analysis:
    sma_short: ${SMA_SHORT_PERIOD:-20}
    sma_long: ${SMA_LONG_PERIOD:-50}
    rsi_period: ${RSI_PERIOD:-14}
    rsi_oversold: ${RSI_OVERSOLD:-30}
    rsi_overbought: ${RSI_OVERBOUGHT:-70}
    macd_fast: ${MACD_FAST_PERIOD:-12}
    macd_slow: ${MACD_SLOW_PERIOD:-26}
    macd_signal: ${MACD_SIGNAL_PERIOD:-9}
    bollinger_period: ${BB_PERIOD:-20}
    bollinger_std: ${BB_STD_DEV:-2.0}
  
  # 추적 종목 (섹터별 다양화)
  symbols:
    TECH: ['AAPL', 'MSFT', 'GOOGL', 'NVDA', 'META', 'AMZN', 'TSLA', 'CRM', 'ORCL', 'ADBE']
    FINANCE: ['JPM', 'BAC', 'WFC', 'GS', 'MS', 'C', 'AXP', 'BRK.B']
    HEALTHCARE: ['JNJ', 'PFE', 'UNH', 'ABBV', 'MRK', 'LLY', 'TMO', 'DHR']
    CONSUMER: ['HD', 'MCD', 'WMT', 'PG', 'KO', 'PEP', 'COST', 'NKE']
    ENERGY: ['XOM', 'CVX', 'COP', 'EOG', 'SLB']
    INDUSTRIAL: ['BA', 'CAT', 'GE', 'LMT', 'UPS', 'FDX']
  
  # 리스크 관리
  risk_management:
    max_position_size: ${MAX_POSITION_SIZE:-0.05}
    stop_loss: ${DEFAULT_STOP_LOSS:-0.03}
    take_profit: ${DEFAULT_TAKE_PROFIT:-0.06}
    trailing_stop: ${TRAILING_STOP_ENABLED:-true}
    max_correlation: 0.7

# =====================================
# 🇯🇵 일본 주식 전략 (.env 연동)
# =====================================
jp_strategy:
  enabled: ${JP_STRATEGY_ENABLED:-true}
  confidence_threshold: ${JP_CONFIDENCE_THRESHOLD:-0.60}
  allocation: ${JP_ALLOCATION:-0.20}  # 포트폴리오 20%
  
  # 일목균형표 설정 (.env 연동)
  ichimoku:
    enabled: true
    tenkan_period: ${ICHIMOKU_TENKAN:-9}
    kijun_period: ${ICHIMOKU_KIJUN:-26}
    senkou_b_period: ${ICHIMOKU_SENKOU_B:-52}
    chikou_span: true
    kumo_analysis: true
  
  # 모멘텀 돌파 전략
  momentum_strategy:
    enabled: true
    breakout_period: 15
    volume_threshold: 1.2
    rsi_period: ${RSI_PERIOD:-14}
    momentum_threshold: 0.05
  
  # 일본 특화 분석
  japan_specific:
    dividend_focus: true
    dividend_threshold: 4.0
    dividend_bonus_score: 0.1
    zaibatsu_analysis: true  # 재벌 기업 분석
    topix_correlation: true  # TOPIX 상관관계
  
  # 추적 종목 (일본 주요 기업)
  symbols:
    TECH: ['7203.T', '6758.T', '9984.T', '6861.T', '4689.T', '8035.T']  # 토요타, 소니, 소프트뱅크
    FINANCE: ['8306.T', '8316.T', '8411.T', '8355.T', '8766.T']         # 미츠비시UFJ, 스미토모
    CONSUMER: ['9983.T', '2914.T', '4568.T', '7974.T', '9843.T']        # 패스트리테일링, JT
    INDUSTRIAL: ['6954.T', '6902.T', '7733.T', '6098.T', '7011.T']      # 화낙, 덴소, 올림푸스
    TRADING: ['8058.T', '2768.T', '8001.T']                             # 미츠비시상사, 상사
  
  # 일본 시장 특화 리스크
  risk_management:
    max_position_size: ${MAX_POSITION_SIZE:-0.05}
    stop_loss: ${DEFAULT_STOP_LOSS:-0.03}
    take_profit: ${DEFAULT_TAKE_PROFIT:-0.06}
    currency_hedge: true  # 환율 헤지
    nikkei_correlation_limit: 0.8

# =====================================
# 🪙 암호화폐 전략 (.env 연동)
# =====================================
coin_strategy:
  enabled: ${COIN_STRATEGY_ENABLED:-true}
  confidence_threshold: ${COIN_CONFIDENCE_THRESHOLD:-0.65}
  allocation: ${COIN_ALLOCATION:-0.20}  # 포트폴리오 20%
  
  # 거래량 분석
  volume_analysis:
    spike_threshold: 2.0
    analysis_period: 24
    volume_ma_period: 20
    whale_detection: true
  
  # 가격 움직임 분석
  price_analysis:
    volatility_window: ${FEATURE_LOOKBACK_DAYS:-30}
    price_change_threshold: 0.05
    support_resistance: true
    fibonacci_retracement: true
  
  # 암호화폐 특화 지표
  crypto_indicators:
    fear_greed_index: true
    social_sentiment: false  # 뉴스 분석 제거
    on_chain_metrics: false  # 온체인 분석 (고급)
    defi_yields: true
    staking_rewards: true
  
  # 추적 종목 (카테고리별)
  symbols:
    MAJOR: 
      - 'KRW-BTC'   # 비트코인
      - 'KRW-ETH'   # 이더리움
      - 'KRW-XRP'   # 리플
      - 'KRW-ADA'   # 카르다노
      - 'KRW-SOL'   # 솔라나
    DEFI: 
      - 'KRW-UNI'   # 유니스왑
      - 'KRW-LINK'  # 체인링크
      - 'KRW-AAVE'  # 아베
      - 'KRW-CRV'   # 커브
      - 'KRW-COMP'  # 컴파운드
    LAYER1: 
      - 'KRW-DOT'   # 폴카닷
      - 'KRW-AVAX'  # 아발란체
      - 'KRW-ATOM'  # 코스모스
      - 'KRW-NEAR'  # 니어
      - 'KRW-MATIC' # 폴리곤
    ALTCOIN: 
      - 'KRW-DOGE'  # 도지코인
      - 'KRW-SHIB'  # 시바이누
      - 'KRW-LTC'   # 라이트코인
      - 'KRW-BCH'   # 비트코인캐시
  
  # 암호화폐 리스크 관리
  risk_management:
    max_position_size: ${MAX_POSITION_SIZE:-0.05}
    stop_loss: ${DEFAULT_STOP_LOSS:-0.03}
    take_profit: ${DEFAULT_TAKE_PROFIT:-0.06}
    trailing_stop: true
    volatility_adjustment: true
    correlation_limit: 0.6  # 암호화폐 간 상관관계

# =====================================
# 🤖 AI/ML 전략 설정 (requirements.txt 연동)
# =====================================
ml_strategy:
  enabled: ${ML_ENABLED:-false}
  
  # 사용할 모델 (requirements.txt에 포함됨)
  models:
    ensemble_voting: ${ML_ENSEMBLE_VOTING:-soft}
    active_models: ${ML_MODELS:-["random_forest", "xgboost", "lstm"]}
  
  # 모델 설정
  model_config:
    random_forest:
      n_estimators: 100
      max_depth: 10
      min_samples_split: 5
    
    xgboost:
      n_estimators: 100
      learning_rate: 0.1
      max_depth: 6
    
    lstm:
      sequence_length: 60
      hidden_units: 50
      dropout: 0.2
      epochs: 100
  
  # 특성 엔지니어링 (.env 연동)
  feature_engineering:
    lookback_days: ${FEATURE_LOOKBACK_DAYS:-30}
    correlation_threshold: ${FEATURE_CORRELATION_THRESHOLD:-0.95}
    technical_indicators: true
    market_regime: true
    volatility_features: true
  
  # 모델 관리
  model_management:
    retrain_interval: ${ML_RETRAIN_INTERVAL_DAYS:-7}
    validation_split: ${ML_VALIDATION_SPLIT:-0.2}
    min_accuracy: ${ML_MIN_MODEL_ACCURACY:-0.65}
    model_path: ${ML_MODEL_PATH:-"models/"}
    auto_deployment: true

# =====================================
# 💰 거래 실행 설정 (.env 연동)
# =====================================
trading:
  # 거래 모드 (.env에서 제어)
  paper_trading: ${PAPER_TRADING:-true}
  auto_execution: ${AUTO_EXECUTION:-true}
  
  # 주문 설정
  order_type: 'limit'  # market, limit, stop_loss, take_profit
  order_timeout: 300
  retry_attempts: 3
  slippage_tolerance: 0.001
  
  # 포지션 사이징 (.env 연동)
  position_sizing:
    method: 'fixed_percent'  # fixed_percent, kelly, volatility, ml_based
    default_size: ${DEFAULT_POSITION_SIZE:-0.05}
    max_size: ${MAX_POSITION_SIZE:-0.05}
    min_amount_usd: ${MIN_TRADE_AMOUNT_USD:-100}
    max_amount_usd: ${MAX_TRADE_AMOUNT_USD:-10000}
  
  # 거래 제한 (.env 연동)
  limits:
    max_daily_trades: ${MAX_DAILY_TRADES:-20}
    max_open_positions: ${MAX_OPEN_POSITIONS:-5}
    max_daily_loss: ${MAX_DAILY_LOSS:-0.01}
    max_drawdown: ${MAX_DRAWDOWN:-0.1}
  
  # 실행 우선순위
  execution_priority:
    - 'stop_loss'      # 손절매 최우선
    - 'take_profit'    # 익절매
    - 'new_signals'    # 새로운 신호
    - 'rebalancing'    # 리밸런싱

# =====================================
# 🎯 포트폴리오 관리 (.env 연동)
# =====================================
portfolio:
  # 자산 배분 (.env 연동)
  allocation:
    us_ratio: ${US_ALLOCATION:-0.60}
    jp_ratio: ${JP_ALLOCATION:-0.20}
    coin_ratio: ${COIN_ALLOCATION:-0.20}
    cash_ratio: ${CASH_ALLOCATION:-0.10}
  
  # 리밸런싱 (.env 연동)
  rebalancing:
    frequency: ${REBALANCE_FREQUENCY:-weekly}
    threshold: ${REBALANCE_THRESHOLD:-0.05}
    method: 'threshold'  # threshold, calendar, volatility
    
    # 리밸런싱 제약
    min_trade_size: ${MIN_TRADE_AMOUNT_USD:-100}
    transaction_cost: 0.001
    tax_optimization: true
  
  # 다양화 제약
  diversification:
    max_sector_weight: ${MAX_SECTOR_EXPOSURE:-0.25}
    max_single_stock: ${MAX_POSITION_SIZE:-0.05}
    min_positions: 10
    correlation_limit: 0.7

# =====================================
# 📊 리스크 관리 (.env 연동)
# =====================================
risk_management:
  # 포지션 리스크 (.env 연동)
  position_risk:
    max_position_size: ${MAX_POSITION_SIZE:-0.05}
    max_total_exposure: 0.95
    stop_loss: ${DEFAULT_STOP_LOSS:-0.03}
    take_profit: ${DEFAULT_TAKE_PROFIT:-0.06}
    trailing_stop_distance: ${TRAILING_STOP_DISTANCE:-0.02}
  
  # 포트폴리오 리스크 (.env 연동)
  portfolio_risk:
    max_portfolio_risk: ${MAX_PORTFOLIO_RISK:-0.02}
    max_daily_loss: ${MAX_DAILY_LOSS:-0.01}
    max_drawdown: ${MAX_DRAWDOWN:-0.1}
    var_confidence: 0.95
    var_horizon: 1  # 1일
  
  # 시장 리스크
  market_risk:
    volatility_limit: 0.25
    correlation_limit: 0.7
    beta_limit: 1.5
    market_regime_detection: true
  
  # 리스크 모니터링
  monitoring:
    real_time_alerts: true
    risk_metrics_interval: ${METRICS_INTERVAL:-300}
    stress_testing: true
    scenario_analysis: true

# =====================================
# 🌐 브로커 API 설정 (.env 연동)
# =====================================
api:
  # 업비트 (암호화폐) - .env에서 로드
  upbit:
    enabled: ${UPBIT_ENABLED:-true}
    paper_trading: ${UPBIT_PAPER_TRADING:-true}
    server_url: "https://api.upbit.com"
    
    # API 제한 (.env 연동)
    rate_limits:
      requests_per_second: ${UPBIT_REQUESTS_PER_SECOND:-8}
      requests_per_minute: ${UPBIT_REQUESTS_PER_MINUTE:-100}
      order_requests_per_second: ${UPBIT_ORDER_REQUESTS_PER_SECOND:-1}
    
    # 거래 설정
    order_type: ${UPBIT_ORDER_TYPE:-limit}
    supported_pairs: ${UPBIT_TRADING_PAIRS:-["KRW-BTC", "KRW-ETH"]}
    excluded_pairs: ${UPBIT_EXCLUDED_PAIRS:-["KRW-BTT"]}
    
    # 수수료 (.env 연동)
    fees:
      maker: ${UPBIT_MAKER_FEE:-0.0005}
      taker: ${UPBIT_TAKER_FEE:-0.0005}
  
  # Interactive Brokers (주식) - .env에서 로드
  ibkr:
    enabled: ${IBKR_ENABLED:-true}
    paper_trading: ${IBKR_PAPER_TRADING:-true}
    
    # 연결 설정 (.env 연동)
    connection:
      host: ${IBKR_TWS_HOST:-"127.0.0.1"}
      port: ${IBKR_TWS_PORT:-7497}
      client_id: ${IBKR_CLIENT_ID:-1}
      timeout: ${IBKR_CONNECT_TIMEOUT:-30}
      heartbeat: ${IBKR_HEARTBEAT_INTERVAL:-60}
    
    # 계좌 설정
    account:
      account_id: ""  # .env에서 로드
      currency: "USD"
      
    # 지원 시장 (.env 연동)
    markets: ${IBKR_MARKETS:-["SMART", "NYSE", "NASDAQ"]}
    currencies: ${IBKR_CURRENCIES:-["USD", "JPY"]}
    
    # 주문 설정
    order_type: ${IBKR_ORDER_TYPE:-"LMT"}
    request_timeout: ${IBKR_REQUEST_TIMEOUT:-10}
  
  # 외부 데이터 소스 (.env 연동)
  data_sources:
    # 야후 파이낸스
    yahoo_finance:
      enabled: ${YAHOO_FINANCE_ENABLED:-true}
      request_delay: ${YAHOO_REQUEST_DELAY:-1}
      
    # 알파벤티지 (선택사항)
    alpha_vantage:
      enabled: ${ALPHA_VANTAGE_ENABLED:-false}
      # API 키는 .env에서 로드
      
    # 경제 데이터
    fred:
      enabled: ${FRED_ENABLED:-false}
      # API 키는 .env에서 로드

# =====================================
# 🔔 알림 시스템 (.env 연동)
# =====================================
notifications:
  # 텔레그램 (.env에서 로드)
  telegram:
    enabled: ${TELEGRAM_ENABLED:-true}
    # 토큰과 채팅ID는 .env에서 로드
    message_format: ${TELEGRAM_MESSAGE_FORMAT:-detailed}
    rate_limit: ${TELEGRAM_RATE_LIMIT:-10}
    
    # 알림 레벨 (.env 연동)
    notifications:
      trades: ${TELEGRAM_NOTIFY_TRADES:-true}
      errors: ${TELEGRAM_NOTIFY_ERRORS:-true}
      daily_summary: ${TELEGRAM_NOTIFY_DAILY_SUMMARY:-true}
      critical_only: ${TELEGRAM_NOTIFY_CRITICAL_ONLY:-false}
  
  # 이메일 (선택사항) - .env에서 로드
  email:
    enabled: ${EMAIL_ENABLED:-false}
    # SMTP 설정은 .env에서 로드
    
  # 슬랙 (선택사항) - .env에서 로드
  slack:
    enabled: ${SLACK_ENABLED:-false}
    # 웹훅 URL은 .env에서 로드
    
  # 디스코드 (선택사항) - .env에서 로드
  discord:
    enabled: ${DISCORD_ENABLED:-false}
    # 웹훅 URL은 .env에서 로드
  
  # 알림 스케줄 (.env 연동)
  schedule:
    daily_report: ${DAILY_REPORT_TIME:-"18:00"}
    weekly_report: ${WEEKLY_REPORT_DAY:-"sunday"}
    monthly_report: ${MONTHLY_REPORT_DAY:-1}
    error_immediate: true
    trade_immediate: true

# =====================================
# 📈 백테스트 설정 (.env 연동)
# =====================================
backtest:
  enabled: ${BACKTEST_ENABLED:-true}
  
  # 백테스트 기간 (.env 연동)
  period:
    start_date: ${BACKTEST_START_DATE:-"2022-01-01"}
    end_date: ${BACKTEST_END_DATE:-"2024-12-31"}
    initial_capital: ${BACKTEST_INITIAL_CAPITAL:-100000}
    
  # 벤치마크 (.env 연동)
  benchmark:
    symbol: ${BACKTEST_BENCHMARK:-"SPY"}
    risk_free_rate: ${BACKTEST_RISK_FREE_RATE:-0.02}
  
  # 거래 비용 (.env 연동)
  costs:
    commission: ${BACKTEST_COMMISSION:-0.001}
    slippage: ${BACKTEST_SLIPPAGE:-0.0005}
    
  # 워크포워드 분석 (.env 연동)
  walkforward:
    enabled: ${WALKFORWARD_ENABLED:-true}
    window_months: ${WALKFORWARD_WINDOW_MONTHS:-6}
    step_months: ${WALKFORWARD_STEP_MONTHS:-1}
  
  # 성과 지표
  metrics:
    - 'total_return'
    - 'annualized_return'
    - 'sharpe_ratio'
    - 'calmar_ratio'
    - 'max_drawdown'
    - 'win_rate'
    - 'profit_factor'
    - 'sortino_ratio'
    - 'information_ratio'

# =====================================
# 💾 데이터 관리 (.env 연동)
# =====================================
data_management:
  # 데이터 디렉토리 (.env 연동)
  directories:
    data_dir: ${DATA_DIR:-"data"}
    price_data: ${PRICE_DATA_DIR:-"data/prices"}
    trade_data: ${TRADE_DATA_DIR:-"data/trades"}
    model_data: ${MODEL_DATA_DIR:-"data/models"}
    reports: ${REPORT_DIR:-"reports"}
    logs: ${LOGS_DIR:-"data/logs"}
    backups: ${BACKUP_DIR:-"backups"}
  
  # 데이터 보관 (.env 연동)
  retention:
    price_data_days: ${PRICE_DATA_RETENTION_DAYS:-1095}  # 3년
    trade_data_days: ${TRADE_DATA_RETENTION_DAYS:-2555}  # 7년
    log_data_days: ${LOG_DATA_RETENTION_DAYS:-365}       # 1년
  
  # 자동 백업 (.env 연동)
  backup:
    enabled: ${AUTO_BACKUP_ENABLED:-true}
    interval_hours: ${BACKUP_INTERVAL_HOURS:-24}
    retention_days: ${BACKUP_RETENTION_DAYS:-30}
    compression: ${BACKUP_COMPRESSION:-true}
    
    # 클라우드 백업 (선택사항)
    cloud_backup:
      enabled: ${CLOUD_BACKUP_ENABLED:-false}
      # AWS/GCP 설정은 .env에서 로드
  
  # 데이터베이스 (.env 연동)
  database:
    enabled: true
    url: ${DATABASE_URL:-"sqlite:///data/trading.db"}
    pool_size: ${DB_POOL_SIZE:-20}
    max_overflow: ${DB_MAX_OVERFLOW:-30}
    pool_timeout: ${DB_POOL_TIMEOUT:-30}
    
    # 백업 DB
    backup_url: ${BACKUP_DATABASE_URL:-"sqlite:///backups/trading_backup.db"}

# =====================================
# 🚀 성능 최적화 (.env 연동)
# =====================================
performance:
  # 멀티프로세싱 (.env 연동)
  multiprocessing:
    enabled: ${MULTIPROCESSING_ENABLED:-true}
    max_workers: ${MAX_WORKERS:-4}
    
  # 비동기 처리 (.env 연동)
  async_processing:
    enabled: ${ASYNC_ENABLED:-true}
    batch_size: ${ASYNC_BATCH_SIZE:-100}
    
  # 캐싱 (.env 연동)
  caching:
    enabled: ${CACHE_ENABLED:-true}
    ttl_seconds: ${CACHE_TTL_SECONDS:-300}
    max_size: ${CACHE_MAX_SIZE:-1000}
    
    # Redis 캐시 (.env 연동)
    redis:
      enabled: ${REDIS_ENABLED:-false}
      url: ${REDIS_URL:-"redis://localhost:6379/0"}
      max_connections: ${REDIS_MAX_CONNECTIONS:-20}
  
  # 큐 시스템 (.env 연동)
  queue:
    enabled: ${QUEUE_ENABLED:-false}
    broker_url: ${CELERY_BROKER_URL:-"redis://localhost:6379/1"}
    result_backend: ${CELERY_RESULT_BACKEND:-"redis://localhost:6379/2"}
    
  # 스레드 풀
  thread_pool:
    size: ${THREAD_POOL_SIZE:-10}
    
  # 메모리 관리
  memory:
    warning_threshold_mb: ${MEMORY_WARNING_THRESHOLD:-1000}
    gc_threshold: 0.8

# =====================================
# 📊 모니터링 & 관찰성 (.env 연동)
# =====================================
monitoring:
  enabled: ${MONITORING_ENABLED:-true}
  
  # 메트릭 수집 (.env 연동)
  metrics:
    collection_interval: ${METRICS_INTERVAL:-300}
    retention_days: 30
    
    # 시스템 메트릭
    system_metrics:
      cpu_threshold: ${CPU_WARNING_THRESHOLD:-80}
      memory_threshold: ${MEMORY_WARNING_THRESHOLD:-85}
      disk_threshold: ${DISK_ALERT_THRESHOLD:-90}
  
  # 헬스체크
  health_check:
    enabled: true
    interval: ${HEALTH_CHECK_INTERVAL:-300}
    timeout: 30
    
    # 체크 항목
    checks:
      - 'database_connection'
      - 'broker_connection'
      - 'memory_usage'
      - 'disk_space'
      - 'api_connectivity'
  
  # 로깅 (.env 연동)
  logging:
    level: ${LOG_LEVEL:-INFO}
    format: ${LOG_FORMAT:-detailed}
    
    # 로그 파일 설정
    files:
      main_log: ${LOG_FILE:-"trading.log"}
      error_log: ${ERROR_LOG_FILE:-"errors.log"}
      trade_log: ${TRADE_LOG_FILE:-"trades.log"}
      
    # 로그 로테이션
    rotation:
      max_size_mb: ${LOG_FILE_SIZE_MB:-100}
      backup_count: ${LOG_BACKUP_COUNT:-10}
      rotation_type: ${LOG_ROTATION:-daily}

# =====================================
# 🔒 보안 설정 (.env 연동)
# =====================================
security:
  # 암호화 (.env 연동)
  encryption:
    master_key: ""  # .env에서 로드 (MASTER_ENCRYPTION_KEY)
    api_key_encryption: ${API_KEY_ENCRYPTION:-true}
    rotation_days: ${API_KEY_ROTATION_DAYS:-30}
    
  # 인증 (.env 연동)
  authentication:
    jwt_secret: ""  # .env에서 로드 (JWT_SECRET)
    jwt_expiration: ${JWT_EXPIRATION_HOURS:-24}
    session_timeout: ${SESSION_TIMEOUT:-3600}
    
  # API 보안
  api_security:
    rate_limiting:
      enabled: true
      requests_per_minute: ${RATE_LIMIT_PER_MINUTE:-100}
      
    # IP 화이트리스트 (선택사항)
    ip_whitelist: []
    
    # 요청 검증
    request_validation: true
    response_sanitization: true

# =====================================
# 🌐 웹 인터페이스 (.env 연동)
# =====================================
web:
  enabled: ${WEB_ENABLED:-false}
  
  # 서버 설정 (.env 연동)
  server:
    host: ${WEB_HOST:-"127.0.0.1"}
    port: ${WEB_PORT:-8000}
    debug: ${WEB_DEBUG:-false}
    
  # 인증 (.env 연동)
  auth:
    required: ${WEB_AUTH_REQUIRED:-true}
    # 사용자명/비밀번호는 .env에서 로드
    session_timeout: ${WEB_SESSION_TIMEOUT:-3600}
    concurrent_sessions: ${WEB_CONCURRENT_SESSIONS:-1}
  
  # API 엔드포인트 (.env 연동)
  api:
    enabled: ${API_ENABLED:-false}
    rate_limit: ${API_RATE_LIMIT:-100}
    
    # 제공 엔드포인트
    endpoints:
      - '/api/portfolio'
      - '/api/trades'
      - '/api/performance'
      - '/api/signals'
      - '/api/health'

# =====================================
# 🧪 테스트 & 개발 (.env 연동)
# =====================================
development:
  # 개발 모드 (.env 연동)
  debug_mode: ${DEBUG_MODE:-false}
  verbose_logging: ${VERBOSE_LOGGING:-false}
  
  # 테스트 설정 (.env 연동)
  testing:
    test_mode: ${TEST_MODE:-false}
    mock_trading: ${MOCK_TRADING_ENABLED:-true}
    test_data: ${TEST_DATA_ENABLED:-false}
    
    # 시뮬레이션
    simulation:
      speed: ${SIMULATION_SPEED:-1.0}
      deterministic: false
  
  # 프로파일링 (.env 연동)
  profiling:
    enabled: ${PROFILING_ENABLED:-false}
    memory_profiling: ${MEMORY_PROFILING:-false}
    
    # 디버그 출력
    debug_output:
      print_signals: false
      print_trades: false
      print_errors: true
      save_debug_data: false

# =====================================
# 🔧 고급 전략 설정
# =====================================
advanced_strategies:
  # 멀티 전략 앙상블
  ensemble:
    enabled: ${STRATEGY_ENSEMBLE:-true}
    voting_method: ${STRATEGY_WEIGHTS:-equal}  # equal, performance, risk_adjusted
    
    # 전략 가중치 (동적 조정)
    weights:
      us_strategy: 0.4
      jp_strategy: 0.3
      coin_strategy: 0.3
  
  # 적응적 파라미터 (.env 연동)
  adaptive_parameters:
    enabled: ${ADAPTIVE_PARAMETERS:-true}
    optimization_interval: ${PARAMETER_OPTIMIZATION_INTERVAL:-30}
    
    # 최적화 방법
    optimization_method: 'bayesian'  # grid, random, bayesian
    objective: 'sharpe_ratio'
  
  # 신호 필터링 (.env 연동)
  signal_filtering:
    enabled: ${SIGNAL_FILTERING_ENABLED:-true}
    min_strength: ${MIN_SIGNAL_STRENGTH:-0.6}
    confirmation_required: ${SIGNAL_CONFIRMATION_REQUIRED:-true}
    
    # 필터 조건
    filters:
      - 'confidence_threshold'
      - 'market_regime'
      - 'volatility_filter'
      - 'correlation_filter'

# =====================================
# 🌍 다국가 설정 (.env 연동)
# =====================================
localization:
  # 언어 설정 (.env 연동)
  language: ${LANGUAGE:-ko}
  
  # 통화 설정 (.env 연동)
  currency:
    base: ${BASE_CURRENCY:-KRW}
    quote: ${QUOTE_CURRENCY:-USD}
    
  # 시간대 설정 (.env 연동)
  timezone: ${TIMEZONE:-Asia/Seoul}
  
  # 지역별 설정
  regions:
    korea:
      trading_calendar: 'KRX'
      holidays: 'korea'
      tax_rate: 0.0
      
    usa:
      trading_calendar: 'NYSE'
      holidays: 'usa'
      tax_rate: 0.0  # 세금은 별도 계산
      
    japan:
      trading_calendar: 'TSE'
      holidays: 'japan'
      tax_rate: 0.0

# =====================================
# 📝 규정 준수 (.env 연동)
# =====================================
compliance:
  enabled: ${COMPLIANCE_ENABLED:-true}
  
  # 거래 감시
  surveillance:
    position_reporting: ${POSITION_REPORTING:-true}
    trade_surveillance: ${TRADE_SURVEILLANCE:-true}
    
  # 세무 보고 (.env 연동)
  tax_reporting:
    enabled: ${TAX_REPORTING_ENABLED:-true}
    year_end: ${TAX_YEAR_END:-"12-31"}
    jurisdiction: ${TAX_JURISDICTION:-"KR"}
    
  # 감사 로그 (.env 연동)
  audit:
    logging: ${AUDIT_LOGGING:-true}
    encryption: ${AUDIT_LOG_ENCRYPTION:-true}
    retention_years: 7

# =====================================
# 💡 실험적 기능 (.env 연동)
# =====================================
experimental:
  # 센티멘트 분석 (.env 연동)
  sentiment_analysis:
    enabled: ${SENTIMENT_ANALYSIS_ENABLED:-false}
    weight: ${NEWS_SENTIMENT_WEIGHT:-0.1}
    
  # 고주파 거래 (.env 연동)
  hft:
    enabled: ${HFT_ENABLED:-false}
    latency_target_ms: ${HFT_LATENCY_TARGET_MS:-10}
    
  # DeFi 통합 (.env 연동)
  defi:
    enabled: ${DEFI_ENABLED:-false}
    yield_farming: ${DEFI_YIELD_FARMING:-false}
    
  # 옵션 거래 (.env 연동)
  options:
    enabled: ${OPTIONS_TRADING_ENABLED:-false}
    strategies: ${OPTIONS_STRATEGIES:-["covered_call", "protective_put"]}

# =====================================
# 📋 시스템 정보 및 메타데이터
# =====================================
system_info:
  # 버전 정보
  version: "3.0.0"
  build_date: "2025-07-01"
  
  # 호환성
  python_version: ">=3.9"
  required_packages: "requirements.txt"
  
  # 환경 연동
  env_file: ".env"
  config_validation: true
  
  # 최소 요구사항
  requirements:
    memory_gb: 8
    storage_gb: 10
    cpu_cores: 4

# =====================================
# ✅ 설정 검증
# =====================================
validation:
  # 필수 환경변수 체크
  required_env_vars:
    - 'ENVIRONMENT'
    - 'PROJECT_MODE'
    - 'MASTER_ENCRYPTION_KEY'
    - 'JWT_SECRET'
    
  # 선택적 환경변수 (기본값 있음)
  optional_env_vars:
    - 'UPBIT_ACCESS_KEY'
    - 'UPBIT_SECRET_KEY'
    - 'IBKR_ACCOUNT_ID'
    - 'TELEGRAM_BOT_TOKEN'
    - 'TELEGRAM_CHAT_ID'
  
  # 설정 유효성 검사
  validation_rules:
    - 'confidence_thresholds_range'
    - 'allocation_sum_equals_one'
    - 'risk_limits_logical'
    - 'file_paths_exist'

# =====================================
# 📖 사용 가이드
# =====================================
# 
# 이 설정 파일 사용법:
# 
# 1. 환경변수 설정:
#    - .env 파일에 모든 민감한 정보 입력
#    - ${VAR_NAME} 형식으로 자동 로드
# 
# 2. 설정 로드:
#    ```python
#    import yaml
#    from os import environ
#    
#    # 환경변수 치환과 함께 로드
#    with open('configs/settings.yaml', 'r') as f:
#        config = yaml.safe_load(f)
#    ```
# 
# 3. 단계별 활성화:
#    - 개발 단계: paper_trading=true, 기본 전략만
#    - 테스트 단계: 백테스팅, 성능 검증
#    - 프로덕션: 점진적 실거래 전환
# 
# 4. 모니터링:
#    - 로그 파일 정기 확인
#    - 성능 지표 모니터링
#    - 알림 시스템 활용
# 
# ⚠️ 중요 사항:
# - 실거래 전 충분한 테스트 필수
# - API 키 보안 철저히 관리
# - 정기적인 백업 및 업데이트
# - 리스크 관리 설정 준수
# 
# 🔗 연동 파일:
# - .env.example: 환경변수 템플릿
# - .gitignore: 보안 파일 제외
# - requirements.txt: 의존성 패키지
# 
# =====================================
# 🏁 최고퀸트프로젝트 - 설정 완료!
# =====================================
